#!/usr/bin/zsh

black=$(printf '\u001b[30m')
red=$(printf '\u001b[31m')
green=$(printf '\u001b[32m')
yellow=$(printf '\u001b[33m')
blue=$(printf '\u001b[34m')
magenta=$(printf '\u001b[35m')
cyan=$(printf '\u001b[36m')
white=$(printf '\u001b[37m')
reset=$(printf '\u001b[0m')

if [[ "$verbose" == "on" ]]; then
	echo "[verbosity on, setting -x mode]"; set -x
fi

src() {
. "$HOME/.zshrc"
}

pause() {
    prompt="$1"
    echo -e -n "\033[1;36m$prompt"
    echo -e -n '\033[0m'
    read
}

usage () {
echo "usage:$red yazt$reset [-uhvSQB] [--usage] [--help] [--version} [--sync [THEME]] [--query]"
}

help () {
echo "usage:$red yazt$reset <operation> [...]"
echo "operations:"
echo "    {-u --usage}"
echo "    {-h --help}"
echo "    {-v --version}"
echo "    {-S --sync} [user/theme] [-u {gitee/github}]"
echo "    {-Q --qnadoc} [docpage]"
echo "    {-B --branch} [branch]"
echo ""
echo "use$red yazt$reset -hh for more info"
}

helpadvanced () {
usage
echo ""
echo "Normal operations:"
echo "{-S --sync} [user/theme] [-u {gitee/github}]: copy a theme; without input, list themes"
echo "    [user/theme]: repository including the theme"
echo "    [-u {gitee,github}]: repo mirror to copy from"
echo "    [-Sy]: updates Yazt"
echo "{-Q --qnadoc} [docpage]: Document specific things about Yazt"
echo "    [docpage]: docpage with info you need"
echo "{-B --branch}: rolls back and forth your branch/variation using Git"
echo ""
}

nocommand () {
echo "$red-> No command specified or command not found$reset $blue(use yazt -h for help)$reset"
usage
exit 1
}

version () {
echo "$red-> yazt version $yaztver$reset"
echo "$green-> zsh version ${ZSH_VERSION}$reset"
echo "$cyan-> $(git --version) $reset"
echo "(Note: Use -vv for more info)"
}

morever () {
source /etc/os-release

echo "$red-> yazt version $yaztver$reset"
echo "$green-> zsh version ${ZSH_VERSION}$reset"
echo "$cyan-> $(git --version) $reset"
echo ""
echo "OS"
}

update () {
echo "$yellow-> Pulling Yazt from official mirrors...$reset"
if git -C $yazt pull; then
	echo "$green-> Sucessfully updated$reset"
else
	echo "$redThere was an error updating Yazt.$reset"
	exit 1
fi
}

themelist () {
echo "In the$red default$reset themes:"
ls $yazt/themes
echo ""
echo "In$green fetched$reset themes:"
ls $yaztcustom/themes
echo ""
echo "In$cyan Yasc-installed$reset themes:"
ls $yazt/usr/yasc
}

 themeuse () {
  theme=${1/*\/}
   if [ -f "$yaztcustom/${theme}.yzt" ]; then
     echo "$theme already exists. Set it from your rc."
   elif [ -f "$yaztcustom/themes/${theme}.yzt" ]; then
     echo "$theme already exists. Set it from your rc."
   elif [ -f "$yazt/themes/${theme}.yzt" ]; then
     echo "$theme already exists. Set it from your rc."
   else
     echo "Copying $1..."
     if [[ "$2" == "gitee" ]]; then
       git clone https://gitee.com/$1 $yazt/etc/cache/$theme
     else
       git clone https://github.com/$1 $yazt/etc/cache/$theme
     fi
     themepath="$yazt/etc/cache/$theme"
     if [[ -f $themepath/$theme.yzt ]]; then
       mv $themepath/$theme.yzt $yaztcustom/themes
       rm -rf $themepath
       echo "Done!"
     elif [[ -f $themepath/$theme.zsh ]]; then
       echo "Could not find $theme.yzt, resorting to $theme.zsh"
       mv $themepath/$theme.zsh $yaztcustom/themes
       rm -rf $themepath
     echo "Done!"
     else
       echo "Could not find $theme.yzt or $theme.zsh in repo"
       rm -rf $themepath
     fi 
   fi
 }

doc () {
if [[ -z $1 ]]; then
	echo "No doc specified."
else
	if [[ -f $yazt/etc/doc/$1.txt ]]; then
		cat $yazt/etc/doc/$1.txt | less
	else
		echo "Doc not found."
	fi
fi
}

rollbranch () {
if [[ -z $1 ]]; then
	echo "No tag specified."
	exit 1
fi
if git -C $yazt checkout $1; then
	echo "Switched to branch $1"
else
	echo "Error switching."
fi
}
src
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
	help
elif [[ "$1" == "-hh" ]]; then
	helpadvanced
elif [[ "$1" == "-v" || "$1" == "--version" ]]; then
	version
elif [[ "$1" == "-Syu" || "$1" == "--update" ]]; then
	update
elif [[ "$1" == "-S" || "$1" == "--sync" ]]; then
 	if [[ -z $2 ]]; then
 		themelist
 	else
		if [[ "$3" == "-u" ]]; then
			themeuse $2 $4
		else
			themeuse $2
		fi
 	fi
elif [[ "$1" == "-u" || "$1" == "--usage" ]]; then
	usage
elif [[ "$1" == "-Q" || "$1" == "--qnadoc" ]]; then
	doc $2
elif [[ "$1" == "-B" || "$1" == "--branch" ]]; then
	rollbranch $2
else
	nocommand
fi
